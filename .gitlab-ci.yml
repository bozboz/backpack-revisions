stages:
  - preparation
  # - building
  - testing
  - security

image: lorisleiva/laravel-docker:7.3

# # Variables
# variables:
#   MYSQL_ROOT_PASSWORD: root
#   MYSQL_USER: mysql_user
#   MYSQL_PASSWORD: mysql_password
#   MYSQL_DATABASE: mysql_db
#   DB_HOST: mysql

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  - ssh-keyscan -H gitlab.bozboz.co.uk >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - ssh -T git@gitlab.bozboz.co.uk

  ##
  ## Optionally, if you will be using any Git commands, set the user name and
  ## and email.
  ##
  #- git config --global user.email "user@example.com"
  #- git config --global user.name "User name"
  - git config --global http.sslVerify false

composer:
  stage: preparation
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    # - cp .env.test .env
    # - php artisan key:generate
  artifacts:
    paths:
      - vendor/
      - composer.lock
      # - .env
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/

# db-seeding:
#   stage: building
#   services:
#     - name: mysql:5.7
#       command: ["--default-authentication-plugin=mysql_native_password"]
#   # Download the artifacts for these jobs
#   dependencies:
#     - composer
#     - npm
#   script:
#     - mysql --version
#     - php artisan migrate:fresh --seed
#     - mysqldump --host="${DB_HOST}" --user="${MYSQL_USER}" --password="${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" > db.sql
#   artifacts:
#     paths:
#       - storage/logs # for debugging
#       - db.sql
#     expire_in: 1 days
#     when: always

phpunit:
  stage: testing
  # services:
  #   - name: mysql:5.7
  #     command: ["--default-authentication-plugin=mysql_native_password"]
  dependencies:
    - composer
    # - db-seeding
  script:
    - php -v
    # - sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak
    # - echo "" | sudo tee /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    # - mysql --host="${DB_HOST}" --user="${MYSQL_USER}" --password="${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" < db.sql
    - ./vendor/phpunit/phpunit/phpunit --version
    - php -d short_open_tag=off ./vendor/phpunit/phpunit/phpunit -v --colors=never --coverage-text --stderr
    # - sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  artifacts:
    paths:
      - ./storage/logs # for debugging
    expire_in: 1 days
    when: on_failure

codestyle:
  stage: testing
  image: lorisleiva/laravel-docker
  script:
    - phpcs --extensions=php --standard=PSR2 src
  dependencies: []

phpcpd:
  stage: testing
  script:
    - test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
    - php phpcpd.phar src/ --min-lines=50
  dependencies: []
  cache:
    paths:
      - phpcpd.phar

phplint:
  stage: testing
  dependencies:
    - composer
  script:
    - composer require overtrue/phplint
    - ./vendor/bin/phplint
  cache:
    paths:
      - .phplint-cache

sensiolabs:
  stage: security
  script:
    - test -d security-checker || git clone https://github.com/sensiolabs/security-checker.git
    - cd security-checker
    - composer install
    - php security-checker security:check ../composer.lock
  dependencies:
    - composer
  cache:
    paths:
      - security-checker/
